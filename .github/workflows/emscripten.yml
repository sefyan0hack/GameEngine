name: emscripten Build
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      EMSDK_VERSION: 4.0.10

    steps:
      - uses: actions/checkout@v3

      - name: Set EMSDK path
        id: set_emsdk_path
        run: echo "EMSDK_PATH=$HOME/emsdk" >> $GITHUB_ENV

      - name: Cache emsdk
        uses: actions/cache@v3
        id: cache-emsdk
        with:
          path: ${{ env.EMSDK_PATH }}
          key: emsdk-${{ runner.os }}-${{ env.EMSDK_VERSION }}

      - uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EMSDK_VERSION }}

      - name: Verify
        run: emcc -v

      - name: Cache apt packages
        uses: actions/cache@v3
        id: cache-apt
        with:
          path: /var/cache/apt
          key: apt-${{ runner.os }}-${{ hashFiles('.github/workflows/**/*.yml') }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            libgl1-mesa-dev mesa-common-dev libxi-dev xvfb libx11-dev

      - name: Configure
        run: emcmake cmake -S . -B build -G "Ninja" -DTESTS=ON

      - name: Build
        run: cmake --build build

      - name: Upload Engine
        uses: actions/upload-artifact@v4
        with:
          name: web-build-Engine
          path: |
            build/**/*.js
            build/**/*.html
            build/**/*.wasm
            build/**/*.data
            !build/tests/**
            !build/_deps/**
          retention-days: 1
          overwrite: true

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: web-build-tests
          path: |
            build/tests/**/*.js
            build/tests/**/*.html
            build/tests/**/*.wasm
            build/tests/**/*.data
          retention-days: 1
          overwrite: true
  deploy:
      needs: build
      runs-on: ubuntu-latest
      permissions:
        pages: write
        id-token: write
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      steps:
        - name: Download Engine Artifact
          uses: actions/download-artifact@v4
          with:
            name: web-build-Engine
            path: dist

        - name: Setup Pages
          uses: actions/configure-pages@v5

        - name: Upload to Pages
          uses: actions/upload-pages-artifact@v3
          with:
            path: dist

        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4