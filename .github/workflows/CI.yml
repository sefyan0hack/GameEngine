name: ci
on:
  pull_request:
  push:

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-24.04
        compiler:
          - llvm
          - gcc
        build_type: [debug, release]
        include:
          - os: "windows-2022"
            compiler: "msvc"
            vs_version: "2022"
          - os: "ubuntu-24.04"
            compiler: "gcc"
            gcc_version: "14"
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ./build/
            ~/vcpkg
            ~/.cache/vcpkg/archives
            ${{ env.LOCALAPPDATA }}/vcpkg/archives
            ${{ env.APPDATA }}/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ~/.cache/ccache
            ~/.ccache
            ~/.config/ccache
            ~/Library/Caches/ccache
            ${{ env.LOCALAPPDATA }}/ccache
            ${{ env.XDG_CACHE_HOME }}/ccache
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt', './vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-
            ${{ runner.os }}-${{ matrix.build_type }}-
            ${{ runner.os }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          version: ${{ matrix.compiler == 'msvc' && 'latest' || matrix.gcc_version || '' }}
          # For GCC: Add Ubuntu Toolchain PPA and install specified version
          gccSetup: |
            add-apt-repository -y ppa:ubuntu-toolchain-r/test
            apt-get update -y
            apt-get install -y gcc-${{ matrix.gcc_version }} g++-${{ matrix.gcc_version }}
          # For MSVC: Use latest VS2022 components
          vs_components: |
            Microsoft.VisualStudio.Component.VC.Tools.x86.x64
            Microsoft.VisualStudio.Component.Windows11SDK.22621
          vcvarsall: true
          cmake: true
          ninja: true
          vcpkg: true
          cppcheck: true

      - name: Configure CMake
        run: |
          if [ "${{ matrix.compiler }}" = "msvc" ]; then
            cmake -S . -B build
          else
            cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          fi

      - name: Build
        run: |
          if [ "${{ matrix.compiler }}" = "msvc" ]; then
            cmake --build build --config ${{ matrix.build_type }}
          else
            cmake --build build --parallel
          fi

      - name: Test
        run: |
          if [ "${{ matrix.compiler }}" = "msvc" ]; then
            ctest --test-dir build -C ${{ matrix.build_type }} --output-on-failure
          else
            ctest --test-dir build --output-on-failure
          fi