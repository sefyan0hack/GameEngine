name: CI
on: [push, pull_request, workflow_dispatch]

jobs:
  Build:
    name: "Build : ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}"
    if: "!contains(github.event.head_commit.message, '[skip CI]')"
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, windows-11-arm, ubuntu-latest,  ubuntu-22.04-arm]
        compiler: [llvm, gcc, msvc]
        build_type: [Debug, Release]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: ubuntu-22.04-arm
            compiler: msvc
          - os: windows-11-arm
            compiler: gcc

    env:
      TEST_TIMEOUT: 60
      BUILD_DIR: build/${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
      APP_EXT: ${{ contains(matrix.os, 'windows' ) && '.exe' || '' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1.6.0
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          cmake: true
          ninja: true
          vcpkg: false

      - name: Install Dependencies
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == *ubuntu* ]]; then
            sudo apt-get update
            sudo apt-get install -y libgl1-mesa-dev libxi-dev mesa-common-dev xvfb
          fi

      - name: Configure CMake
        shell: bash
        run: cmake -S . -B "$BUILD_DIR" -G  "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DTESTS=ON -DHARDEN=ON

      - name: Build
        shell: bash
        run: cmake --build "${{ env.BUILD_DIR }}" --config ${{ matrix.build_type }} --parallel

      - name: Upload Test Executable
        uses: actions/upload-artifact@v4
        with:
          name: unit_tests-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: ${{ env.BUILD_DIR }}/tests/unit/unit_tests${{ env.APP_EXT }}
          retention-days: 1
          overwrite: true

      - name: Test
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == *ubuntu* ]]; then
            xvfb-run --auto-servernum ctest --test-dir "${{ env.BUILD_DIR }}" --output-on-failure --timeout ${{ env.TEST_TIMEOUT }}
          else
            ctest --test-dir "${{ env.BUILD_DIR }}" --output-on-failure --timeout ${{ env.TEST_TIMEOUT }}
          fi

  Build-Web:
    steps:
    - name: Build
      uses: ./.github/workflows/emscripten-build.yml
      with:
        cmake_configure_flags: "-DTESTS=ON"
        system_dependencies: "libgl1-mesa-dev mesa-common-dev libxi-dev xvfb libx11-dev"

    - name: Upload Test Executable
      uses: actions/upload-artifact@v4
      with:
        name: unit_tests-web
        path: |
          build-web/tests/*.js
          build-web/tests/*.html
          build-web/tests/*.wasm
          build-web/tests/*.data
        retention-days: 1
        overwrite: true